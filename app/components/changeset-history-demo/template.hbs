
<form class="form-horizontal">
  <h1 class="page-header">
    Ember-Changeset-History demo
    <button class="btn btn-primary" {{action "undo"}} disabled={{if (not canUndo) "disabled"}}>UNDO</button>
    <button class="btn btn-primary" {{action "redo"}} disabled={{if (not canRedo) "disabled"}}>REDO</button>
  </h1>
  <div class="bs-callout bs-callout-info">
    Checkout the code for this demo at <a href="https://scazz010.github.io/changeset-history-demo">https://scazz010.github.io/changeset-history-demo</a>
  </div>

  <div class="form-group">
    <h3>Working with valdations:</h3>

    <p>Ember-changeset-history works in exactly the same way as ember changeset. The errors on a changeset are stored with the change, so undo-ing a change to an invalid state also loads the error</p>

    <div class="bs-example">
    {{#validated-field
      type="text"
      changeset=changeset
      property="firstName"
    }}
      {{#debounced-value property=(get changeset 'firstName') as |debouncer|}}
        <input class="form-control" value={{changeset.firstName}} oninput={{action debouncer value="target.value"}}>
      {{/debounced-value}}
    {{/validated-field}}
    </div>
  </div>

  <div class="form-group">
    <h3>Deboucing mutations:</h3>

    <p>Mutations for onInput will store a state per change - which is annoying for text inputs. Ember-changeset-history ships with a component to debounce input values easily - it's a small wrapper around ember-concurrency.</p>

    <div class="bs-example">
      {{#validated-field type="text" changeset=changeset property="lastName"}}
        {{#debounced-value property=(get changeset "lastName") as |debouncer|}}
          <input class="form-control" value={{changeset.lastName}} oninput={{action debouncer value="target.value"}}>
        {{/debounced-value}}
      {{/validated-field}}

      <span>&nbsp;</span>

      <h4>Template:</h4>
      <figure class="highlight">
        <pre>
          <code class="language-html" data-lang="html">
        \{{#debounced-value property=(get changeset "lastName") as |debouncer|}}
          &lt;input class="form-control" value=\{{changeset.lastName}} oninput=\{{action debouncer value="target.value"}}>
        \{{/debounced-value}}
          </code>
        </pre>
      </figure>
    </div>
  </div>

  <div class="form-group">
    <h3>Custom debounced actions</h3>

    <p>You can pass it a custom action if you need to do something other than mutate the property (this one logs to the console, but a sensible usecase is storing values to local-storage for persistence after page reloads:</p>

    <div class="bs-example">
      {{#validated-field
        type="text"
        changeset=changeset
        property="description"
      }}
        {{#debounced-value
          propertyPath="changeset.description"
          onChange=(action "customSetter")
        as |debouncer|}}
          <input class="form-control" value={{changeset.description}} oninput={{action debouncer value="target.value"}}>
        {{/debounced-value}}
      {{/validated-field}}
      <span id="helpBlock" class="help-block">
      </span>

      <figure class="highlight">
        <pre>
          <code class="language-html" data-lang="html">
      \{{#debounced-value
          propertyPath="changeset.description"
          onChange=(action "customSetter")
          as |debouncer|
      }}
          &lt;input class="form-control" value=\{{changeset.description}} oninput=\{{action debouncer value="target.value"}}>
      \{{/debounced-value}}
          </code>
        </pre>
      </figure>
    </div>
  </div>
</form>